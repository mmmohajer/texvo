# Generated by Django 5.1.6 on 2025-06-10 18:10

import core.models.base_model
import core.models.user
import core.utils.helpers
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=248, unique=True)),
                ('file', models.FileField(storage=core.models.base_model.MediaFileS3Storage(bucket_name='media', is_public=True), upload_to=core.utils.helpers.get_media_upload_path)),
                ('file_type', models.CharField(choices=[('IMAGE', 'IMAGE'), ('VIDEO', 'VIDEO'), ('PDF', 'PDF'), ('CSV', 'CSV'), ('OTHER', 'OTHER')], max_length=256)),
                ('post_type', models.CharField(choices=[('BLOG', 'BLOG'), ('TIP', 'TIP'), ('PROJECT', 'PROJECT'), ('TESTIMONIAL', 'TESTIMONIAL'), ('GENERAL', 'GENERAL')], max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('register_token', models.CharField(blank=True, max_length=256, null=True)),
                ('reset_password_token', models.CharField(blank=True, max_length=256, null=True)),
                ('last_tokenized_email_sent', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('email',),
                'abstract': False,
            },
            managers=[
                ('objects', core.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('mailing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_province_state', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_country', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_postal_code_zip', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_photo', models.CharField(blank=True, max_length=2048, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Profiles',
                'ordering': ('user__email',),
            },
        ),
    ]
